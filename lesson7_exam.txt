Часть 1. Отвечу без использования гугла
1) Укажите отличия между PHP 5.6 и 7 (как можно больше). Какие из них вы считаете важными и удобными?
Различий не знаю, ни разу не сталкивался с таким в учебе.

2) Чем отличается __autoload от spl_autoload_register?
Вторая функция новее

3) Что такое ECMAScript? Чем он отличается от JavaScript?
ECMAScript - стандарт языка, опираясь на который можно создавать разные языки. JavaScript - одно из воплощений этого языка.
JavaScript однажды откололись от ECMAScript

4) Какие типы БД вы знаете? Приведите примеры.
Реляционные - MySQL, Redis, Oracle, документоориентированные - MongoDB, Полнотекстовые - Elastic Search

5) Для чего нужны составные индексы в БД?
Индекс - уникальная характеристика каждой записи в таблице. Индексы существуют чтобы поиск и выборка по индексированным полям
происходила быстрее. Иногда невозможно создать индекс по одному полю, тогда его можно создать по двум. Либо просто так удобнее
для логики работы приложения.

6) Практическая задача. Спроектируйте систему новостной ленты по указанным требованиям
(UML, нужно создать схему БД, указать необходимые индексы, перечислить стек технологий):

Всё это решается на Mysql и PHP. HTML/CSS само собой. JS опционально

Составлю план.

a. Лента новостей выводится по убыванию: от самой свежей новости к более давним;
b. Каждая новость снабжена лентой комментариев;
c. Лента комментариев выводится по возрастанию: от самого давнего комментария к новым;
d. Обе ленты (новостей и комментариев) имеют функционал пагинации: новости – по 10 единиц, комментарии – по 25;
e. Комментарии могут оставлять только авторизованные пользователи;
f. Новостей и комментариев может быть очень много.

Необходимо две таблицы - новости и комментарии. Если на сайте не предусмотрена регистрация пользователей
Новости: Id, заголовок, текст_новости, дата_публикации
Комментарии: id_комментария, id_связанной новости, текст_комментария, дата_комментария, id_автора,
пользователи: id_пользователя, ФИО_пользователя, прочие_данные

смотреть диаграмму в файле EML.jpg

Вывод всех новостей: SELECT title, text, date FROM news ORDER BY date DESC LIMIT 10;

Вывод комментов под новостью:
SELECT comment_text, comment_date FROM comments
JOIN users ON comments.user_id = users.id
WHERE news_id = 5 ORDER BY comment_date LIMIT 25;

Логику авторизации прописать в PHP, например фреймворк LARAVEl
Новостей и комментов очень много - ну так современные БД очень хорошо с этим справляются, и всегда можно перейти на
распределённую систему.



* Усложнение задачи 6: a. Напишите запрос, который будет отвечать за пагинацию новостей или комментариев.
 Собственно запросы уже написаны. нужно просто менять значение START при переходе на следующие странички
 Вывод всех новостей: SELECT title, text, date FROM news ORDER BY date DESC LIMIT 10 START 1;

 b. Где лучше сортировать выводимые данные – на уровне БД или логики? Почему?
  Данные лучше сортировать на стороне БД, эти программы прекрасно приспособлены для работы с большими массивами,
   можно задать индексы по датам, индексы связей между таблицами(внешние ключи)


  c. Сверстайте прототип ленты новостей (без поддержки логики, с AJAX-заглушками).

  -за час, отведённый на экзамен я даже пытаться не буду. Это же надо логику развёртывания объекта с данными собирать.
  Об этом я почти ничего не помню.

* Надо обеспечить хранение большого списка файлов в системе CentOS. Как организовать структуру директорий?
CentOS не знаю совсем. Даже не слышал.

На этот момент у меня прошло 33 минуты, свои знания я исчерпал и пошел в гугл
1) Укажите отличия между PHP 5.6 и 7
-7 версия за счёт улучшений почти во всём получила гораздо лучшую производительность.
В среднем в два раза быстрее и использует в два раза меньше памяти
-Появилась группировка импорта классов
-Можно указывать тип возвращаемого значения
-улучшена обработка ошибок, те, что раньше ломали скрипт, теперь могут быть обработаны
-Две новых функции для генерации крипографически безопасной строки и целых
-и прочее

2) Чем отличается __autoload от spl_autoload_register?
__autoload обычно считается устаревшим. Это позволяет использовать только один автозагрузчик
spl_autoload_register позволяет регистрировать несколько автозагрузчиков, которые будут выполняться поочередно,
 пока не будет найден и загружен соответствующий класс/интерфейс/признак, или пока все параметры автозагрузки
  не будут исчерпаны. Это означает, что если вы используете фрейм-код или другие сторонние библиотеки, которые
  реализуют свои собственные автозагрузчики, вам не нужно беспокоиться о том, что вы вызываете конфликты.

4) Какие типы БД вы знаете? Приведите примеры.
- текстовые файлы
-иерархические структуры: файловая система
-сетевые: IDMS
-реляционные: MySQL
             MariaDB
             PostgreSQL
             SQLite
-базы ключ-значение: Redis
                 memcached
                 etcd
-документоориентированные: MongoDB
                           RethinkDB
-Графовые: Neo4j
           JanusGraph
           Dgraph
-Колоночные: Cassandra
             HBase

На этом час отпущенного времени прошёл
